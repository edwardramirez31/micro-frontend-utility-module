name: 'Build and Deploy Workflow'

on:
  workflow_call:
    inputs:
      environment-name:
        type: string
        description: 'Environment Name'
        required: true
      environment-url:
        type: string
        description: 'Environment URL'
        required: true
      role-session-name:
        type: string
        description: 'Role Session Name'
        required: true
      aws-region:
        type: string
        description: 'Region to deploy'
        required: true
      identifier:
        type: string
        description: 'Unique ID for new compiled files folder inside micro-frontend-name'
        required: true
      run-import-map-deployer:
        type: boolean
        description: 'Boolean used to update import map if it is wanted'
        required: true
    secrets:
      FRONTEND_DEPLOYMENT_ROLE:
        required: true
      BUCKET_NAME:
        required: true
      MICRO_FRONTEND_NAME:
        required: true
      IMD_USERNAME:
        required: false
      IMD_PASSWORD:
        required: false
      IMD_HOST:
        required: false
      CLOUDFRONT_HOST:
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment-name }}
      url: ${{ inputs.environment-url}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Installing dependencies
        uses: ./.github/actions/install_deps
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.FRONTEND_DEPLOYMENT_ROLE }}
          role-session-name: ${{ inputs.role-session-name }}
          role-duration-seconds: 900
          aws-region: ${{ inputs.aws-region }}
      - name: Remove tsconfig options for NPM
        run: rm -rf dist && sed -i.bak -e '6,7d' tsconfig.json
      - name: Build
        run: yarn build
      - name: Deploy to S3
        run: aws s3 sync dist/ s3://${BUCKET_NAME}/${MICRO_FRONTEND_NAME}/${IDENTIFIER}
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          MICRO_FRONTEND_NAME: ${{ secrets.MICRO_FRONTEND_NAME }}
          IDENTIFIER: ${{ inputs.identifier }}
      - name: Update import map
        if: ${{ inputs.run-import-map-deployer }}
        run: curl -u ${USERNAME}:${PASSWORD} -d '{ "service":"@project/'"${MICRO_FRONTEND_NAME}"'","url":"https://'"${CLOUDFRONT_HOST}"'/'"${MICRO_FRONTEND_NAME}"'/'"${IDENTIFIER}"'/'project-"${MICRO_FRONTEND_NAME}"'.js" }' -X PATCH https://${IMD_HOST}/services/\?env=prod -H "Accept:application/json" -H "Content-Type:application/json"
        env:
          USERNAME: ${{ secrets.IMD_USERNAME }}
          PASSWORD: ${{ secrets.IMD_PASSWORD }}
          MICRO_FRONTEND_NAME: ${{ secrets.MICRO_FRONTEND_NAME }}
          CLOUDFRONT_HOST: ${{ secrets.CLOUDFRONT_HOST }}
          IMD_HOST: ${{ secrets.IMD_HOST }}
          IDENTIFIER: ${{ inputs.identifier }}
